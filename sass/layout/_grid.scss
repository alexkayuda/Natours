
.row{
    //if it's big enough, it will be 1140px wide. if it's less, it will simply take 100% of the width
    max-width: $grid-width;
    //background-color: #eee;

    //to center element inside another element
    margin: 0 auto;

    &:not(:last-child){
        //applies styling on every element EXCEPT the last child!
        margin-bottom: $gutter-vertical;
    }

    //because we are setting float:left below, this will cause a collapse, and height wont be shown. use this mixin trick
    @include clearfix;


    /* Class attribute selector. Very Powerful! 
            ^ - means that we want to select all elements which have class="col-" attribute AT THE BEGINNING!!
            * - means that we want to select all element that CONTAIN class="col-" attribute
            $ - means END with the provided attribute
    */
    [class^="col-"]{
        float: left;
        
        &:not(:last-child){
            margin-right: $gutter-horizontal;
        }
    }

    .col-1-of-2{
        //in order to use sass variable inside, wrap it up as shown below
        width: calc((100% - #{$gutter-horizontal}) / 2);
    }

    .col-1-of-3{
        width: calc( (100% - 2*(#{$gutter-horizontal}) ) / 3 );
    }

    .col-2-of-3{
        width: calc( 2 * ((100% - 2*(#{$gutter-horizontal}) ) / 3) + #{$gutter-horizontal});
    }

    .col-1-of-4{
        width: calc( (100% - 3*(#{$gutter-horizontal}) ) / 4 );
    }

    .col-2-of-4{
        width: calc( 2 * ((100% - 3*(#{$gutter-horizontal}) ) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4{
        width: calc( 3 * ((100% - 3*(#{$gutter-horizontal}) ) / 4) + 2*#{$gutter-horizontal});
    }

}